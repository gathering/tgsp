// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                  String   @id @default(cuid())
  userId              String
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String?  @db.Text
  access_token        String?  @db.Text
  expires_at          Int?
  refresh_expires_in  Int?
  token_type          String?
  scope               String?
  id_token            String?  @db.Text
  session_state       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("account")
}

model Session {
  id           String    @id @default(cuid())
  sessionToken String    @unique
  userId       String
  expires      DateTime

  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  username      String?
  role          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  credits       Int?       @default(4)

  accounts      Account[]
  sessions      Session[]
  virtualServers VirtualServer[]

  @@map("user")
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_token")
}

model VirtualServerTemplate {
  id            Int     @id @default(autoincrement())
  name          String
  platformId    String
  networkId     String
  orcTemplateId String
  sizes         Json

  virtualServers VirtualServer[]

  @@map("virtual_server_template")
}

model VirtualServer {
  id                      Int       @id @default(autoincrement())
  userId                  String
  virtualServerTemplateId Int
  virtualServerSize       String
  name                    String
  orcId                   String?
  createdAt               DateTime  @default(now())

  user                   User                  @relation(fields: [userId], references: [id], onDelete: Cascade)
  virtualServerTemplate  VirtualServerTemplate @relation(fields: [virtualServerTemplateId], references: [id], onDelete: Cascade)

  @@map("virtual_server")
}